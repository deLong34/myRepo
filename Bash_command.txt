ls              @list, показывает содержимое дирктории
ls   -a         @показывает все, даже скрытые файлы
cd              @change derectory   сменить папку
cd ..           @перейти в каталог выше
mkdir           @make derectory     создать папку
echo '..' > file.txt    @добавляет текст  > в файл
cat file.txt    @показывает содержимое файла
vi file.txt     @редактировать содержимое файла
cp test.txt test_copy.txt   @копирует файл 
mv file1 file2  @переименовать
rm file         @remove             удалить файл
rm -r           @удаление навсегда
touch file      @создать файл
touch папка/.gitkeep   @создает в пустой папке файл невидимый
clear           @очистка баш


GIT
git config --global user.name "name" 
git config --global user.email "email addres"
git config --global color.ui auto
git config --global core.aditor "program"
git config --list  @выводит настройки

git add          @добавляет 
    add .        @добавляет директорию и все её файлы
git status
git init         @создает пустой репозиторий в текущей папке
git remote add origin ..... @создает связь локального репозитория с удаленным
git remote -v    @выводит удаленные адреса репозитория
git reset 'хэш'  @возвращает в состояние коммита с номером хэша
   reset --hard  @сбросит состояние текущего репозитория на состояние последнего коммита
git ferlog       @лог всех изменений в коммитах, даже удаленных
git revert       @создает новый коммит, который отменяет действие другого коммита
git restore      @сброс состояния файла на указанное
git rebase main  @перемещает начало ветки на текущее состояние ветки main
git commit       @открывает окно загрузки коммита
     -a          @ +команда add
     -m ' ... '  @создает коммит без открытия окна, текст в ковычках
     -am ' ... ' @ add & commit 
    --amend      @перезаписывает последний комит
git log          @выводит лог действий
     --oneline   @короткий лог   
git branch       @показывает ветки
git branch name  @создает на текущей ветке ветку name     
     -m name     @переименовать текущую ветку на name
     -d name1 name2   @слияние веток 1 и 2 в текущую
git fetch        @загружает обновления из репозитория
git pull         @скачать последнее обновление ветки
git push         @загрузить локальные изменения в удаленный репозиторий
     -u origin dev     @создает новую ветку dev в удаленном репозитории origin и загружает туда изменения
     --delete origin name1 name2  @удаляет ветки 1 и 2 из удаленного репозитория оригин
     --force     @принудительно загружает изменения в ветку (после перемещения rebase)
     --tags      @загружает тэги на удаленный репозиторий
     --delete origin 1.0.1    @удаляет тэг 1.0.1 из удаленного репозитория   
git checkout ... @переключение на ветку ...
     -m          @создает и переключает, если ветки с таким названием нет
git merge ...    @вливает в текущую ветку изменения из ветки ...
     --abort     @отменяет merge
.gitkeep         @скрытый файл
.gitignore       @хранилище названий файлов. игнорируемых git'ом
git tag          @показывает версию
git tag 1.0.0    @присваивает версию 1.0.0 
git tag --list   @показывает все версии
        -d ...   @удаляет тег ...
git stash        @создает хранилище, в которое загружает изменения не создавая изменения на ветках
    stash list           @выгружает список стэшей
    stash push file.txt  @добавляет файл в стэш
    stash pop stash@{}   @выгружает файл из стэша stash{} в текущую ветку
git charry-pick (commit) @переносит комит на текущую ветку
                (brahch) @переносит последний комит ветки
              ..(branch) @переносит все комиты с ветки
FORK - клонирование удаленного репозитория 